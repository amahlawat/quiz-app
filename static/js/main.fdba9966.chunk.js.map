{"version":3,"sources":["data/Category.js","containers/Home.js","services/fetchService.js","components/Quiz/Options.js","components/Button.js","components/Result.js","commonFunctions/shuffle.js","utils/index.js","containers/Quiz.js","components/TotalScore/TotalScore.js","routes.js","containers/App.js","serviceWorker.js","index.js"],"names":["Category","name","id","SubContainer","styled","div","_templateObject","Box","_templateObject2","Heading","h2","_templateObject3","Home","props","react_default","a","createElement","className","data","map","datum","index","react_router_dom","to","key","fetchService","_x","_fetchService","apply","this","arguments","_callee","category","url","error","regenerator_default","wrap","_context","prev","next","bool","message","axios","get","then","response","catch","err","console","log","finally","abrupt","stop","uuidv4","require","symbols","Option","option","onClick","clickHandler","isCorrect","value","Options","options","uniqueNumber","Options_Option","Container","button","Button_templateObject","Button","clicked","Pass","Result_templateObject","Fail","Result_templateObject2","Success","score","Failure","getShuffledArr","arr","newArr","slice","i","length","rand","Math","floor","random","_ref","Validate","Array","isArray","undefined","Quiz","_useState","useState","_useState2","Object","slicedToArray","questionNum","setQuestionNum","_useState3","_useState4","responseData","setResponseData","_useState5","_useState6","result","setResult","_useState7","_useState8","setScore","nextBtnClickHandler","localStorage","setItem","history","push","useEffect","_fetchData","asyncToGenerator","mark","searchParams","URLSearchParams","location","search","sent","fetchData","results","correct_answer","incorrect_answers","forEach","parse","question","Quiz_Options","jQuery","find","addClass","Fragment","Result_Success","components_Button","Result_Failure","TotalScore","getItem","Routes","react_router","exact","path","component","App","routes","Boolean","window","hostname","match","ReactDOM","render","basename","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdba9966.chunk.js","sourcesContent":["const Category = [\r\n    { \"name\": \"GENERAL KNOWLEDGE\", id: 9 },\r\n    { \"name\": \"SCIENCE: COMPUTERS\", id: 18 },\r\n];\r\n\r\nexport default Category;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './style.css';\r\nimport data from '../data/Category';\r\n\r\nconst SubContainer = styled.div`\r\n    text-align: center;    \r\n`\r\nconst Box = styled.div`\r\n    background-color: #fff;\r\n    color: #000;\r\n    height: 50px;\r\n    width: inherit;\r\n    margin: 20px;\r\n    border-radius: 15px;\r\n    &:hover{\r\n        background-color: #322f31;\r\n        color: #fff;    \r\n    }\r\n`\r\n\r\nconst Heading = styled.h2`\r\n    color: navy;\r\n`\r\n\r\nexport default function Home(props){\r\n    return(\r\n        <div className=\"main-container\">\r\n            <SubContainer>\r\n                <h1>Quiz App</h1>\r\n                <Heading>Select One Category</Heading>\r\n                {\r\n                data.map((datum, index) => \r\n                <NavLink to={\"/quiz?id=\"+datum.id} key={datum.id}>\r\n                    <Box>\r\n                        {datum.name}\r\n                    </Box>\r\n                </NavLink>\r\n                )}            \r\n           </SubContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import axios from 'axios';\r\n\r\nexport default async function fetchService(category){\r\n    let url = 'https://opentdb.com/api.php?amount=10&difficulty=hard&type=multiple&category='+category;\r\n    let data = null;let error = { bool: false, message: ''};\r\n    await axios.get(url)\r\n    .then(function(response){\r\n        data = response.data;\r\n    })\r\n    .catch(function(err){\r\n        error = { bool: true, message: err.message};\r\n        console.log(err);\r\n    })\r\n    .finally(function(){\r\n        // always executed\r\n    })\r\n    return { data, error };\r\n}","import React from 'react'\r\n\r\nimport './style.css';\r\n\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nconst symbols = [\"A\", \"B\", \"C\", \"D\"];\r\n\r\nconst Option = props => (\r\n    <div className=\"option\" id={props.option.id} onClick={() => props.clickHandler(props.option.isCorrect)} >\r\n        <div className=\"symbol\">{symbols[props.index]}</div>\r\n        <div className=\"option-text\">{props.option.value}</div>\r\n    </div>\r\n)\r\n\r\nconst Options = props => {\r\n    return(\r\n        <div className=\"options\">\r\n            {props.options.map((option, index) => {\r\n                let uniqueNumber = uuidv4();             \r\n                return( <Option key={uniqueNumber} index={index} option={option} clickHandler={props.clickHandler} />)\r\n            })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Options;\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.button`\r\n    background-color: blueviolet;\r\n    color: #fff;\r\n    height: 40px;\r\n    width: 200px;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    margin-top: 20px;\r\n    &:hover{\r\n        background-color: #fff;\r\n        color: blueviolet;    \r\n    }\r\n` \r\n\r\nconst Button = props => (\r\n    <Container onClick={props.clicked}>\r\n        Next\r\n    </Container>\r\n)\r\n\r\nexport default Button;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Pass = styled.div`\r\n    background-color: green;\r\n    color: #fff;\r\n    height: 30px;\r\n    width: 500px;\r\n    border: solid 1px #fff;\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    padding-top: 10px;\r\n` \r\nconst Fail = styled.div`\r\n    background-color: indianred;\r\n    color: #fff;\r\n    height: 30px;\r\n    width: 500px;\r\n    border: solid 1px #fff;\r\n    border-radius: 10px;\r\n    margin-top: 20px;\r\n    text-align: center;\r\n    padding-top: 10px;\r\n` \r\nconst Success = props => <Pass>Answer is correct, your score is {props.score}</Pass>\r\n\r\nconst Failure = props => <Fail>Sorry, Answer is incorrect, your score is {props.score}</Fail>\r\n\r\nexport { Success, Failure };","const getShuffledArr = arr => {\r\n    const newArr = arr.slice()\r\n    for (let i = newArr.length - 1; i > 0; i--) {\r\n        const rand = Math.floor(Math.random() * (i + 1));\r\n        [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\r\n    }\r\n    return newArr\r\n};\r\n\r\nexport default getShuffledArr;","export function Validate(value){\r\n    if(Array.isArray(value) && value.length > 0)\r\n        return true;\r\n    return (value !== null && value !== undefined) ? true: false;\r\n        \r\n}","import React, { useState, useEffect } from 'react';\r\nimport parse from 'html-react-parser';\r\nimport jQuery from 'jquery'\r\n\r\nimport fetchService from '../services/fetchService'\r\nimport Options from '../components/Quiz/Options'\r\nimport Button from '../components/Button'\r\nimport * as Result from '../components/Result'\r\nimport './style.css';\r\nimport getShuffledArr from '../commonFunctions/shuffle';\r\nimport { Validate } from '../utils';\r\n\r\nfunction Quiz(props) {\r\n  const [questionNum, setQuestionNum] = useState(0);\r\n  const [responseData, setResponseData] = useState(null);\r\n  const [result, setResult] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  useEffect(() => {\r\n      async function fetchData(){\r\n        let searchParams = new URLSearchParams(props.location.search);  \r\n        let id = searchParams.get('id');      \r\n        let data = await fetchService(id);\r\n        setResponseData(data)\r\n      }\r\n      fetchData();\r\n  }, []);\r\n  \r\n  function clickHandler(isCorrect){\r\n    if(isCorrect)  {\r\n      setResult(true);\r\n      setScore(score+1);\r\n    }\r\n    else setResult(false);\r\n    jQuery('#id1, #id2, #id0').find('.symbol').addClass('failure');\r\n    jQuery('#id3').find('.symbol').addClass('success');\r\n    jQuery('#id1, #id2, #id0').find('.option-text').addClass('failure');\r\n    jQuery('#id3').find('.option-text').addClass('success');\r\n    //jQuery('.options').addClass('no-click');\r\n  } \r\n\r\n  function nextBtnClickHandler(){\r\n    //jQuery('.options').removeClass('no-click');\r\n    if(questionNum === 9){\r\n      localStorage.setItem(\"totalScore\", score);\r\n      props.history.push(\"/total-score\");\r\n    }else {\r\n      setQuestionNum(questionNum+1);\r\n      setResult('');\r\n    }\r\n  }\r\n  \r\n  let options = [];\r\n  if(Validate(responseData) && Validate(responseData.data) && Validate(responseData.data.results)){\r\n    options.push({\"id\":\"id3\", \"isCorrect\": true, \"value\": responseData.data.results[questionNum].correct_answer});\r\n    responseData.data.results[questionNum].incorrect_answers.forEach((datum, index) => {\r\n      let option = { \"id\": \"id\"+index, \"isCorrect\": false, \"value\": datum}\r\n      options.push(option);\r\n    })\r\n    options = getShuffledArr(options)\r\n  }  \r\n  return (\r\n    <div className=\"quiz-app\">\r\n       { responseData === null ? <div>No data found</div>: \r\n      <div className=\"main-box\">\r\n        <div className=\"question-container\">\r\n          <div className=\"ques-score-board\">\r\n            <ul>\r\n              <li>Attempted: {questionNum}</li>\r\n              <li>Unattempted: {10-questionNum}</li>\r\n              <li>Score: {score}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"ques-num\">Question {questionNum+1} / {responseData.data.results.length}</div>\r\n          <div className=\"ques-text\">\r\n            {parse(responseData.data.results[questionNum].question)}            \r\n          </div>\r\n        </div>  \r\n        <Options \r\n          options={options} \r\n          clickHandler={clickHandler}    \r\n          result={result}\r\n        />\r\n        <div className=\"result-next-div\">\r\n          {result !== '' ? \r\n          result ? <>\r\n          <Result.Success score={score} />\r\n          <Button clicked={nextBtnClickHandler} />\r\n          </>\r\n          : \r\n          <>\r\n            <Result.Failure score={score} />\r\n            <Button clicked={nextBtnClickHandler} />\r\n          </>\r\n          : null}                                    \r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TotalScore = () => {\r\n    let score = localStorage.getItem(\"totalScore\");\r\n    return(\r\n        <div>\r\n            <h1>Congratulations for participation in quiz</h1>\r\n            <h2>Your total Score is {score}</h2>\r\n            <h4><NavLink to=\"/\">Back to Home page</NavLink></h4>\r\n        </div>\r\n    )\r\n}\r\nexport default TotalScore;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './containers/Home';\r\nimport Quiz from './containers/Quiz';\r\nimport TotalScore from './components/TotalScore/TotalScore';\r\n\r\nconst Routes = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\"  component={Home} />\r\n        <Route path=\"/quiz\"  component={Quiz} />\r\n        <Route path=\"/total-score\" component={TotalScore} />\r\n    </Switch>\r\n)\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Routes from '../routes'\r\n\r\nconst App = () => <Routes />\r\n\r\nexport default App;\r\n/*\r\n https://opentdb.com/api.php?amount=10&difficulty=hard&type=multiple&category=9\r\ngeneral knowledge = 9\r\nscience computers = 18\r\n */","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<HashRouter basename=\"/\">\r\n    <App />\r\n</HashRouter>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}